{"version":3,"file":"static/js/14.080d7e9e.chunk.js","mappings":"6NAQA,MA6DA,EA7D2CA,IAAuC,IAAtC,MAAEC,EAAK,SAAEC,EAAQ,YAAEC,GAAaH,EAC1E,MAAMI,GAAWC,EAAAA,EAAAA,OACVC,EAAMC,IAAWC,EAAAA,EAAAA,UAA8B,CACpDC,GAAI,EACJC,KAAM,GACNC,MAAO,KAcHC,EAAqBC,IACzB,MAAM,KAAEH,EAAI,MAAEI,GAAUD,EAAEE,OAC1BR,GAASS,GAAaA,EAAW,IAAKA,EAAU,CAACN,GAAOI,GAAU,MAAK,EASzE,OANAG,EAAAA,EAAAA,YAAU,KACJf,EAAW,GAZGgB,MAElB,MAAMC,EAAWC,EAAAA,EAAiBC,MAAMC,GAAUA,EAAMb,KAAOP,IAC/DK,EAAQY,GAAY,KAAK,EAUvBD,EACF,GACC,KAGDK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,MAAM,OACNjB,KAAK,OACLI,MAAW,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMI,KACbkB,SAAUhB,EACViB,WAAS,EACTC,OAAO,YAETL,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,MAAM,QACNjB,KAAK,QACLI,MAAW,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMK,MACbiB,SAAUhB,EACViB,WAAS,EACTC,OAAO,YAETL,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,QAAQ,OAAOC,eAAe,aAAaC,GAAI,EAAEV,UACpDC,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,QA5CKC,KAEXnC,GAASoC,EAAAA,EAAAA,IAAoB,CAAEvC,QAAOE,gBAAe,EA0CjCqB,SACf,aAIC,C,gCC/DH,MAAMJ,EAAmC,CAC9C,CAAEX,GAAI,EAAGC,KAAM,WAAYC,MAAO,oBAClC,CAAEF,GAAI,EAAGC,KAAM,aAAcC,MAAO,oBACpC,CAAEF,GAAI,EAAGC,KAAM,iBAAkBC,MAAO,sBACxC,CAAEF,GAAI,EAAGC,KAAM,cAAeC,MAAO,qBACrC,CAAEF,GAAI,EAAGC,KAAM,gBAAiBC,MAAO,uBACvC,CAAEF,GAAI,EAAGC,KAAM,eAAgBC,MAAO,qBACtC,CAAEF,GAAI,EAAGC,KAAM,iBAAkBC,MAAO,qBACxC,CAAEF,GAAI,EAAGC,KAAM,gBAAiBC,MAAO,sBACvC,CAAEF,GAAI,EAAGC,KAAM,iBAAkBC,MAAO,qBACxC,CAAEF,GAAI,GAAIC,KAAM,gBAAiBC,MAAO,sB","sources":["components/customer/Customer.tsx","mockData/customers.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Box, Button, TextField } from '@mui/material';\nimport { mockCustomerList } from '../../mockData/customers';\nimport { removeTabAndRefresh } from '../../stateManagement/slices/tabsSlice'\nimport { CustomerData } from '../../interfaces/ICustomer';\nimport { EntityTabProps } from '../../interfaces/ITab';\n\nconst Customer: React.FC<EntityTabProps> = ({ tabId, entityId, parentTabId }) => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState<CustomerData | null>({\n    id: 0,\n    name: '',\n    email: '',\n  });\n\n  const Save = () => {\n    // Call API to save\n    dispatch(removeTabAndRefresh({ tabId, parentTabId }));\n  };\n\n  const getCustomer = () => {\n    // Get data from mock data or API\n    const customer = mockCustomerList.find((index) => index.id === entityId);\n    setData(customer || null);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setData((prevData) => prevData ? { ...prevData, [name]: value } : null);\n  };\n\n  useEffect(() => {\n    if (entityId > 0) {\n      getCustomer()\n    }\n  }, []);\n\n  return (\n    <div>\n      <TextField\n        label=\"Name\"\n        name=\"name\"\n        value={data?.name}\n        onChange={handleInputChange}\n        fullWidth\n        margin=\"normal\"\n      />\n      <TextField\n        label=\"Email\"\n        name=\"email\"\n        value={data?.email}\n        onChange={handleInputChange}\n        fullWidth\n        margin=\"normal\"\n      />\n      <Box display=\"flex\" justifyContent=\"flex-start\" mt={2}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={Save}\n        >\n          Save\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default Customer;","import { CustomerData } from \"../interfaces/ICustomer\";\n\nexport const mockCustomerList: CustomerData[] = [\n  { id: 1, name: 'John Doe', email: 'john@example.com' },\n  { id: 2, name: 'Jane Smith', email: 'jane@example.com' },\n  { id: 3, name: 'Robert Johnson', email: 'robert@example.com' },\n  { id: 4, name: 'Emily Davis', email: 'emily@example.com' },\n  { id: 5, name: 'Michael Brown', email: 'michael@example.com' },\n  { id: 6, name: 'Sarah Wilson', email: 'sarah@example.com' },\n  { id: 7, name: 'David Martinez', email: 'david@example.com' },\n  { id: 8, name: 'Sophia Taylor', email: 'sophia@example.com' },\n  { id: 9, name: 'James Anderson', email: 'james@example.com' },\n  { id: 10, name: 'Olivia Thomas', email: 'olivia@example.com' },\n];"],"names":["_ref","tabId","entityId","parentTabId","dispatch","useDispatch","data","setData","useState","id","name","email","handleInputChange","e","value","target","prevData","useEffect","getCustomer","customer","mockCustomerList","find","index","_jsxs","children","_jsx","TextField","label","onChange","fullWidth","margin","Box","display","justifyContent","mt","Button","variant","color","onClick","Save","removeTabAndRefresh"],"sourceRoot":""}